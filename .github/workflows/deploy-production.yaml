name: Build and Deploy the application to production environment

on:
  workflow_dispatch:

  push:
    branches:
      - main

jobs:
  deploy-backend:
    name: Deploy backend to production environment
    uses: ./.github/workflows/amplify-init.yaml
    secrets: inherit
    with:
      AMPLIFY_ENV_NAME: prod

  patch-version:
    name: Patch the version of the app
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git pull origin ${{ github.ref_name }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm
      - name: Install dependencies
        run: npm ci

      - run: |
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"

      - name: Patch version and Add Timestamp
        run: |
          # Incrementar la versión en package.json y package-lock.json
          node -e "
          const fs = require('fs');
          const packagePath = './package.json';
          const packageLockPath = './package-lock.json';
          
          // Leer y modificar package.json
          const pkg = require(packagePath);
          const versionParts = pkg.version.split('.');
          versionParts[2] = parseInt(versionParts[2]) + 1;
          const newVersion = versionParts.join('.');
          console.log('New Version:', newVersion);
          pkg.version = newVersion;
          fs.writeFileSync(packagePath, JSON.stringify(pkg, null, 2));
          
          // Leer y modificar package-lock.json
          const pkgLock = require(packageLockPath);
          pkgLock.version = newVersion;
          fs.writeFileSync(packageLockPath, JSON.stringify(pkgLock, null, 2));
          "
          
          # Verificar si el archivo android/app/build.gradle existe
          if [[ ! -f "android/app/build.gradle" ]]; then
            echo "Error: android/app/build.gradle does not exist" >&2; exit 1
          fi
          
          # Imprimir las líneas que contienen versionCode y versionName
          echo "Lines containing versionCode and versionName from android/app/build.gradle:"
          grep -E "versionCode|versionName" android/app/build.gradle
          
          # Intentar extraer e incrementar versionCode y modificar versionName en android/app/build.gradle
          newVersionCode=$(grep -E "^[ \t]*versionCode [0-9]+" android/app/build.gradle | awk '{print $2}')
          echo "Extracted versionCode: $newVersionCode"
          
          if ! [[ $newVersionCode =~ ^[0-9]+$ ]] ; then
            echo "Error: versionCode not found or not a number" >&2; exit 1
          fi
          
          let "newVersionCode++"
          echo "Incremented versionCode: $newVersionCode"
          
          # Usar sed y mover el archivo temporal al original
          sed "s/^[ \t]*versionCode [0-9]*/    versionCode $newVersionCode/" android/app/build.gradle > android/app/build.gradle.tmp && mv android/app/build.gradle.tmp android/app/build.gradle
          sed "s/versionName \"[^\"]*\"/versionName \"$(node -p "require('./package.json').version")\"/" android/app/build.gradle > android/app/build.gradle.tmp && mv android/app/build.gradle.tmp android/app/build.gradle
      
      # Commit and push changes to github
      - uses: stefanzweifel/git-auto-commit-action@v4

  build-android:
    name: Install and build android app (Production)
    needs: patch-version
    uses: ./.github/workflows/eas-build.yaml
    secrets: inherit
    with:
      PLATFORM: android
      PROFILE: production

  submit-android:
    name: Submit android app to Play Store
    needs: build-android
    uses: ./.github/workflows/eas-submit.yaml
    secrets: inherit
    with:
      PLATFORM: android
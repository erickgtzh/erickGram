type Like @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  postID: ID! @index(name: "byPost", queryField: "likesForPostByUser", sortKeyFields: ["userID"])
  User: User @belongsTo(fields: ["userID"])
  Post: Post @belongsTo(fields: ["postID"])
}

type CommentLike @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  commentID: ID! @index(name: "byComment", queryField: "likesForCommentByUser", sortKeyFields: ["userID"])
  User: User @belongsTo(fields: ["userID"])
  Comment: Comment @belongsTo(fields: ["commentID"])
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  comment: String!
  userID: ID! @index(name: "byUser")
  postID: ID! @index(name: "byPost", queryField: "commentsByPost", sortKeyFields: ["createdAt"])
  nofLikes: Int!
  User: User @belongsTo(fields: ["userID"])
  Post: Post @belongsTo(fields: ["postID"])
  CommentLikes: [CommentLike] @hasMany(indexName: "byComment", fields: ["id"])
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  type: String! @index(name: "postByDate", queryField: "postsByDate", sortKeyFields: ["createdAt"])
  description: String 
  image: String
  images: [String!]
  video: String
  nofComments: Int!
  nofLikes: Int!
  userID: ID! @index(name: "byUser")
  User: User @belongsTo(fields: ["userID"])
  Likes: [Like] @hasMany(indexName: "byPost", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  email: String!
  username: String @index(name: "usersByUsername", queryField: "usersByUsername")
  bio: String
  website: AWSURL
  nofPosts: Int!
  nofFollowers: Int!
  nofFollowings: Int!
  image: String
  Comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Likes: [Like] @hasMany(indexName: "byUser", fields: ["id"])
  CommentLikes: [CommentLike] @hasMany(indexName: "byUser", fields: ["id"])
} 